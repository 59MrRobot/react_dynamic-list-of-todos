{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoInfo","id","completed","title","userId","onSelect","selectedId","onSelectId","useState","isTaskComplete","setIsTaskComplete","className","cn","type","defaultChecked","onChange","onClick","TodoList","todos","query","setQuery","filter","setFilter","setSelectedId","filteredTodos","todo","toLowerCase","includes","selectIdHandler","placeholder","value","event","target","map","API_URL","getUser","fetch","then","response","json","CurrentUser","selectedUser","setSelectedUser","loadUser","a","loadedUser","useEffect","name","email","phone","App","setTodos","selectedUserId","setSelectedUserId","loadTodos","loadedTodos","selectHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a2907e0.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useState } from 'react';\n\ninterface Props {\n  id: number\n  completed: boolean;\n  title: string;\n  userId: number;\n  onSelect: (userId: number) => void;\n  selectedId: number;\n  onSelectId: (id: number) => void;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  id,\n  completed,\n  title,\n  userId,\n  onSelect,\n  selectedId,\n  onSelectId,\n}) => {\n  const [isTaskComplete, setIsTaskComplete] = useState(completed);\n\n  return (\n    <li\n      className={cn(\n        'TodoList__item',\n        { 'TodoList__item--unchecked': !isTaskComplete },\n        { 'TodoList__item--checked': isTaskComplete },\n      )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          defaultChecked={isTaskComplete}\n          onChange={() => setIsTaskComplete(!isTaskComplete)}\n        />\n        <p>{title}</p>\n      </label>\n\n      <button\n        type=\"button\"\n        className={cn(\n          'TodoList__user-button',\n          'button',\n          { 'TodoList__user-button--selected': selectedId === id },\n        )}\n        data-cy=\"userButton\"\n        onClick={() => {\n          onSelect(userId);\n          onSelectId(id);\n        }}\n      >\n        {`User #${userId}`}\n      </button>\n    </li>\n  );\n};\n","import React, { useState } from 'react';\nimport './TodoList.scss';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  onSelect: (userId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelect }) => {\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [selectedId, setSelectedId] = useState(0);\n\n  let filteredTodos = todos.filter(todo => (\n    todo.title.toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n\n  switch (filter) {\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n      break;\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n      break;\n    default:\n      break;\n  }\n\n  const selectIdHandler = (id: number) => {\n    setSelectedId(id);\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Filter by title\"\n        data-cy=\"filterByTitle\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n\n      <select\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Not Completed</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filteredTodos.map(todo => (\n            <TodoInfo\n              key={todo.id}\n              id={todo.id}\n              completed={todo.completed}\n              title={todo.title}\n              userId={todo.userId}\n              onSelect={onSelect}\n              selectedId={selectedId}\n              onSelectId={selectIdHandler}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  userId: number;\n  onSelect: (userId: number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({ userId, onSelect }) => {\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\n\n  const loadUser = async () => {\n    const loadedUser = await getUser(userId);\n\n    setSelectedUser(loadedUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n      <h3\n        className=\"CurrentUser__name\"\n        data-cy=\"userName\"\n      >\n        {selectedUser?.name}\n      </h3>\n      <p className=\"CurrentUser__email\">{selectedUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser?.phone}</p>\n\n      <button\n        type=\"button\"\n        className=\"button CurrentUser__clear\"\n        onClick={() => onSelect(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  const loadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const selectHandler = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList todos={todos} onSelect={selectHandler} />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser userId={selectedUserId} onSelect={selectHandler} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}